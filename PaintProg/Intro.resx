<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAiA0NMq8SEjm0DQ0CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZBcaJJQSEqGeEhLzbQoKPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAZiqIEL2Z2HjRjdJk9dIb5a19s/38REtkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfQAABUs/SKRHXGvnRIie/0qKof89dYf8PSYqOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGIjJgdjJCeicCgs/55ARf96YG7/SYec/ylPXcYYQkwGAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAA//////////j////h////A////gP///wD///4B///8Af//+AP///AH///
        gD///wB///4Af//8Af//+AP///AH///gD///wB///4A///8Af//+AP///AH///gD///wB///4A///8Af
        //+AP///gH///8D////h////+f////////8=
</value>
  </data>
</root>